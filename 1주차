#해당 1주차 수업은 idle로 진행
import pandas as pd
df=pd.read_csv('data/friend_list.csv')

df1=pd.read_csv('data/friend_list.txt')

df2=pd.read_csv('data/friend_list_tab.txt', delimiter='\t')

df3=pd.read_csv('data/friend_list_no_head.csv', header=None)
df3.columns=['name', 'age', 'job']

df4=pd.read_csv('data/friend_list_no_head.csv', header=None, names=['name', 'age', 'job'])
print(df4)

import pandas as pd

friend_dict_list = [
    {'name':'John', 'age':25, 'job':'student'},
    {'name':'Nate', 'age':30, 'job':'teacher'}
]
df=pd.DataFrame(friend_dict_list)
df=df[['name', 'job', 'age']]


from collections import OrderedDict
friend_ordered_list = OrderedDict(
    [
        ('name', ['John', 'Nate']),
        ('age', [20, 30]),
        ('job', ['student', 'teacher'])
    ]
)
df=pd.DataFrame.from_dict(friend_ordered_list)



friend_list=[
    ['john', 22, 'student'],
    ['jenny', 22, 'student']
]
column_name=['name', 'age', 'job']
df=pd.DataFrame.from_records(friend_list, columns = column_name)


friend_list = [
    ['name', ['John', 'Nate']],
    ['age', [20, 30]],
    ['job', ['student', 'teacher']]
]

df=pd.DataFrame.from_items(friend_list)
print(df)

import pandas as pd
friends=[{'name':'EnJae', 'age':22, 'job':'student'},
         {'name':'Jenny', 'age':30, 'job': None},
         {'name':'Nate', 'age':30, 'job':'teacher'}]
df=pd.DataFrame(friends)
df=df[['name', 'age', 'job']]

#csv로 저장하기(index와 header는 True default-생략 원할 때 False로 주면 됨)
#na_rep는 None value를 위한
df.to_csv('data/friend.csv', index=False, header=True, na_rep='-')

import pandas as pd
friend_list=[
    ['john', 22, 'student'],
    ['jenny', 27, 'student'],
    ['Jacob', 30, 'developer']
]
column_name=['name', 'age', 'job']
df=pd.DataFrame.from_records(friend_list, columns = column_name)

# 부분 출력
#print(df[1:3])
# or
# 직접 자르기
#df=df[1:3]

# or
# location기능 사용 가능
#print(df.loc[[0, 2]])

# by column condition
    # integer 사용
print(df[df.age>25])
print(df.query('age>25'))
    # + 문자형
print(df[(df.age>25)&(df.name=='Jacob')])

#filter column
    # by index
friend_list=[
    ['John', 22, 'student'],
    ['Jenny', 27, 'teacher'],
    ['Jacob', 30, 'developer']
]
df=pd.DataFrame.from_records(friend_list)
print(df.iloc[:,0:2])
print(df.iloc[0:2,0:2])

    #by column name
df=pd.read_csv('data/friend_list_no_head.csv', header=None, names=['name', 'age', 'job'])
df_filtered=df[['name', 'age']]
#or
print(df.filter(items=['age', 'job']))

print(df.filter(like='a', axis=1))#axis는 축, 언제나 1..?

print(df.filter(regex='b$', axis=1))#regex는 정규식



import pandas as pd

friends = [{'age':25, 'job':'student'},
           {'age':30, 'job':'teacher'},
           {'age':25, 'job':'developer'}
]
df=pd.DataFrame(friends, index=['John', 'Jenny', 'Nate'], columns=['age', 'job'])
print(df.drop(['John', 'Nate']))
#삭제를 df에 반영시키려면
# df=df.drop~~이케  or
# df.drop(['John', 'Nate'], inplace=True)


friends = [{'name':'John', 'age':25, 'job':'student'},
           {'name':'Ben', 'age':30, 'job':'teacher'},
           {'name':'Jenny', 'age':25, 'job':'developer'}
]
df=pd.DataFrame(friends, columns=['name', 'age', 'job'])
#index로 삭제해보자
df=df.drop(df.index[[0,2]])

#column value에 따라
df=pd.DataFrame(friends, columns=['name', 'age', 'job'])
df=df[df.age>25]
print(df)

#column 없애기1
df=pd.DataFrame(friends, columns=['name', 'age', 'job'])
df=df.drop('age', axis=1)#axis는 컬럼 중에서 라는 뜻

#column 없애기2
df=pd.DataFrame(friends, columns=['name', 'age', 'job'])
df=df.drop('age', axis=1, inplace=False)
print(df)


